apiVersion: scaffolder.backstage.io/v1beta3
kind: Template
metadata:
  name: edgefarm-node-add
  title: Add a new node to the edgefarm
  description: Add a new node to the edgefarm
spec:
  type: service
  parameters:
    - title: Fill in some steps
      required:
        - name
        - clusterName
      properties:
        clusterName:
          title: Target cluster
          type: string
          description: The target cluster the node will be related to
          default: minikube
          enum:
            - minikube
            - linode1
          enumNames:
            - 'Local Minikube Cluster'
            - 'Linode 1'
        name:
          title: Name of the node
          type: string
          description: Unique name of the kubernetes node
          maxLength: 8
          pattern: '^([a-zA-Z][a-zA-Z0-9]*)(-[a-zA-Z0-9]+)*$'
          ui:autofocus: true
          ui:options:
            rows: 5
          default: Node1 # TODO remove debug statement

    - title: Choose a location
      required:
        - newRepo
        - repoUrl
      properties:
        newRepo:
          title: Create a new repository?
          type: boolean
          ui:widget: radio
          default: true
        repoUrl:
          title: Repository Location
          type: string
          ui:autofocus: true
          ui:field: RepoUrlPicker
          ui:options:
            requestUserCredentials:
              secretsKey: USER_OAUTH_TOKEN
            allowedHosts:
              - github.com
            allowedOwners:
              - matmah
            allowedRepos:
              - edgefarm

  steps:
    - id: fetch-base
      name: Fetch Base
      action: fetch:template
      input:
        url: ./content
        targetPath: nodes/${{ parameters.name }}
        values:
          clusterName: ${{ parameters.clusterName }}
          nodeName: ${{ parameters.name }}
          owner: ${{ user.entity.metadata.namespace }}/${{ user.entity.metadata.name }}
    - id: publish
      if: ${{ parameters.newRepo }}
      name: Create a new repository
      action: publish:github
      input:
        allowedHosts: ['github.com']
        description: This is ${{ parameters.name }}
        repoUrl: ${{ parameters.repoUrl }}
        repoVisibility: public
        requiredApprovingReviewCount: 0
        deleteBranchOnMerge: true
        gitAuthorName: ${{ user.entity.metadata.name }}
        gitAuthorEmail: ${{ user.entity.spec.profile.email }}
        allowAutoMerge: true
        defaultBranch: main
    - id: pull-request
      if: ${{ parameters.newRepo == false }}
      name: Create Pull Request
      action: publish:github:pull-request
      input:
        repoUrl: ${{ parameters.repoUrl }}
        branchName: add-node-${{ parameters.name }}-definition
        title: Add node ${{ parameters.name }} definition
        description: Adds a new node with name ${{ parameters.name }}
        gitAuthorName: ${{ user.entity.metadata.name }}
        gitAuthorEmail: ${{ user.entity.spec.profile.email }}

    - id: register
      name: Register
      action: catalog:register
      input:
        repoContentsUrl: ${{ steps['publish'].output.repoContentsUrl }}
        catalogInfoPath: '/nodes/${{ parameters.name }}/catalog-info.yaml'

  output:
    links:
      - title: Open repository
        url: ${{ steps['publish'].output.remoteUrl }}
      - title: Open pull request
        url: ${{ steps['pull-request'].output.remoteUrl }}
      - title: Open in catalog
        icon: catalog
        entityRef: ${{ steps['register'].output.entityRef }}
